% =========================================================================
% Geodetic Bayesian Inversion Software (GBIS)
% Software for the Bayesian inversion of geodetic data.
% Copyright: Marco Bagnardi, 2018
%
% Email: gbis.software@gmail.com
%
% Reference: 
% Bagnardi M. & Hooper A, (2018). 
% Inversion of surface deformation data for rapid estimates of source 
% parameters and uncertainties: A Bayesian approach. Geochemistry, 
% Geophysics, Geosystems, 19. https://doi.org/10.1029/2018GC007585
%
% =========================================================================
% Last update: 8 August, 2018

% INPUT FILE

%% Reference point and Area of interest
geo.referencePoint = [130.855; 31.950];    % Longitude and Latitude in degrees for arbitrary reference point of local coordinates system [Lon; Lat;]
geo.boundingBox = [130.846; 31.96; 130.866; 31.94;];  % Coordinates in degrees of upper left and lower right limits of area of interest [UL_Lon,UL_Lat,LR_Lon,LR_Lat] [W; N; E; S]

%% InSAR data
% Make sure insarID is unique!

insarID = 1;                            % InSAR dataset unique identifier

insar{insarID}.dataPath = '/Users/yunjunz/insarlab/Kirishima/Model/data/KirishimaAlos2DT23_20150209_20170918.mat'; % Path to data file

insar{insarID}.wavelength = 0.236;      % Wavelength in m (e.g., Envisat/ERS/Sentinel: 0.056; CSK/TSX/TDX: 0.031)

insar{insarID}.constOffset = 'y';       % Remove constant offset? 'y' or 'n'

insar{insarID}.rampFlag = 'y';          % Remove ramp? 'y' or 'n'

insar{insarID}.sillExp = 5.7e-05;       % Variogram sill in m^2

insar{insarID}.range = 750;             % Variogram range in m

insar{insarID}.nugget = 5.6e-06;          % Variogram nugget in m

insar{insarID}.quadtreeThresh = 0.009^2;  % Quadtree threshold variance (e.g., 0.01^2 m or 1e-04 m)

%insar{insarID}.quadtreeBox = [130.851; 31.955; 130.861; 31.947;];  % WNES coordinates in degrees for area of interest

%insar{insarID}.gridStep = 400;          % grid step in m


%% GPS data

%gps.dataPath = '/Users/yunjunz/development/matlab/GBIS_V1.1/Example/Data/GPS_data.txt';   % Path to GPS data file
%gps.weight = 1/1;    % Weight of GPS data vs. InSAR data in inversion (e.g., 10/1)

%% Model parameters

modelInput.nu = 0.4;     % Poisson's ratio (Shear modulus is set to 1) clay-rich layer (Tsukamoto et al., 2018; Kobayashi et al., 2018)

% Mogi 'M'
%                             X       Y      Z      DV
modelInput.mogi.start = [   700;    600;    500;   1e5; ];      % starting model
modelInput.mogi.step =  [   100;    100;    100;   1e4; ];      % initial maximum step size
modelInput.mogi.lower = [     0;      0;      0;   1e-3;];      % lower bounds on m
modelInput.mogi.upper = [  1000;   1000;   2000;   1e7; ];      % upper bounds on m

% McTigue 'T'
%                                X       Y      Z     R   DP/mu
modelInput.mctigue.start = [     0;    100;   100;   50;  4e-2; ];  % starting model
modelInput.mctigue.step =  [    50;     50;    50;   10;  1e-1; ];  % initial maximum step size
modelInput.mctigue.lower = [  -200;   -200;     0;   10;  1e-4; ];  % lower bounds on m
modelInput.mctigue.upper = [   400;    400;  1000;  500;   1e0; ];  % upper bounds on m

% Compound Dislocation Model (Nikhoo) 'C'
%                             X       Y      Z    omegaX  omegaY  omegaZ   ax      ay      az     opening
modelInput.cdmn.start = [     0;    100;    100;    10;      0;     30;    50;     50;     10;      0.1;];  % starting model
modelInput.cdmn.step  = [    50;     50;     50;     1;      1;      1;    10;     10;     10;      0.1;];  % initial maximium step size
modelInput.cdmn.lower = [  -200;   -200;      0;     0;    -30;      0;    10;     10;     10;     1e-3;];  % lower bounds on m
modelInput.cdmn.upper = [   400;    400;   1000;    90;     30;     90;   500;    500;    500;      1e1;];  % upper bounds on m

% Penny-shaped crack 'P'
%                              X       Y      Z     R    DP/mu
modelInput.penny.start = [   500;    500;   500;  100;   1e-2; ];    % starting model
modelInput.penny.step =  [   100;    100;    50;  100;    1e1; ];    % initial maximum step size
modelInput.penny.lower = [  -500;   -500;     0;    1;   1e-5; ];    % lower bounds on m
modelInput.penny.upper = [  1500;   1500;  2000; 2000;    1e2; ];    % upper bounds on m
