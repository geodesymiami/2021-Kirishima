% =========================================================================
% Geodetic Bayesian Inversion Software (GBIS)
% Software for the Bayesian inversion of geodetic data.
% Copyright: Marco Bagnardi, 2018
%
% Email: gbis.software@gmail.com
%
% Reference: 
% Bagnardi M. & Hooper A, (2018). 
% Inversion of surface deformation data for rapid estimates of source 
% parameters and uncertainties: A Bayesian approach. Geochemistry, 
% Geophysics, Geosystems, 19. https://doi.org/10.1029/2018GC007585
%
% =========================================================================
% Last update: 8 August, 2018

% INPUT FILE

%% Reference point and Area of interest
geo.referencePoint = [130.853; 31.947];    % Longitude and Latitude in degrees for arbitrary reference point of local coordinates system [Lon; Lat;]
geo.boundingBox = [130.832; 31.96; 130.87; 31.935];  % Coordinates in degrees of upper left and lower right limits of area of interest [UL_Lon,UL_Lat,LR_Lon,LR_Lat] [W; N; E; S]

%% InSAR data
% Make sure insarID is unique!

insarID = 1;                            % InSAR dataset unique identifier - ALOS2 asc track

insar{insarID}.dataPath = '/Users/yunjunz/data/Kirishima/Model/data/KirishimaAlos2AT131_20150106_20171010.mat'; % Path to data file

insar{insarID}.wavelength = 0.236;      % Wavelength in m (e.g., Envisat/ERS/Sentinel: 0.056; CSK/TSX/TDX: 0.031)

insar{insarID}.constOffset = 'y';       % Remove constant offset? 'y' or 'n'

insar{insarID}.rampFlag = 'n';          % Remove ramp? 'y' or 'n'

insar{insarID}.sillExp = 3.6e-05;       % Variogram sill in m^2

insar{insarID}.range = 1060;             % Variogram range in m

insar{insarID}.nugget = 8.0e-06;          % Variogram nugget in m

insar{insarID}.quadtreeThresh = 0.006^2;  % Quadtree threshold variance (e.g., 0.01^2 m or 1e-04 m)

insar{insarID}.quadtreeEndLevel = 15;  % Quadtree end of subdivisions, default is 1000

insar{insarID}.quadtreeMinPixelNumber = 1 % Minimum number of pixels for each subdivision, below which will excluded. Set to 1 to keep everything.

insar{insarID}.quadtreeBox = [130.842; 31.954; 130.862; 31.941];  % WNES coordinates in degrees for area of interest

insar{insarID}.gridStep = 600;          % grid step in m

%%

insarID = 2;                            % InSAR dataset unique identifier - ALOS2 desc track

insar{insarID}.dataPath = '/Users/yunjunz/data/Kirishima/Model/data/KirishimaAlos2DT23_20150209_20170918.mat'; % Path to data file

insar{insarID}.wavelength = 0.236;      % Wavelength in m (e.g., Envisat/ERS/Sentinel: 0.056; CSK/TSX/TDX: 0.031)

insar{insarID}.constOffset = 'y';       % Remove constant offset? 'y' or 'n'

insar{insarID}.rampFlag = 'n';          % Remove ramp? 'y' or 'n'

insar{insarID}.sillExp = 3.1e-05;       % Variogram sill in m^2

insar{insarID}.range = 860;             % Variogram range in m

insar{insarID}.nugget = 6.7e-06;          % Variogram nugget in m

insar{insarID}.quadtreeThresh = 0.0075^2;  % Quadtree threshold variance (e.g., 0.01^2 m or 1e-04 m)

insar{insarID}.quadtreeEndLevel = 15;  % Quadtree end of subdivisions, default is 1000

insar{insarID}.quadtreeMinPixelNumber = 1 % Minimum number of pixels for each subdivision, below which will excluded. Set to 1 to keep everything.

insar{insarID}.quadtreeBox = [130.842; 31.954; 130.862; 31.941];  % WNES coordinates in degrees for area of interest

insar{insarID}.gridStep = 600;          % grid step in m


%% Model parameters

modelInput.nu = 0.25;     % Poisson's ratio (Shear modulus is set to 1) clay-rich layer (Tsukamoto et al., 2018; Kobayashi et al., 2018)

% Topographic Effect correction using varying depth method (Williams & Wadge, 1998, GRL)
% Peak of Iwo-yama: 1313 m
modelInput.topo = 'y';						% 'y' or 'n'. Apply topographic correction using varying depth method.
modelInput.freeSurfaceHeight = 1300;		% Minimum height of observations in m a.s.l.; observations below the threshold will be fixed to this height.


% Compound Dislocation Model (Nikhoo) 'C'
%                             X       Y      Z    omegaX  omegaY  omegaZ    aX     aY/aX   aZ/aX    opening
modelInput.cdmn.start = [     0;      0;  -1120;    10;    -10;      0;     50;      1;      1;      0.3;];  % starting model
modelInput.cdmn.step  = [    10;     10;     10;     1;      1;      1;     10;    0.1;    0.1;      0.1;];  % initial maximium step size
modelInput.cdmn.lower = [  -100;   -100;  -1220;     0;    -20;      0;     10;    0.2;    0.2;     1e-3;];  % lower bounds on m
modelInput.cdmn.upper = [   100;    100;  -1020;    20;      0;      0;    100;      5;      5;      1e0;];  % upper bounds on m





% Mogi 'M'
%                             X       Y      Z      DV
modelInput.mogi.start = [     0;      0;    200;   1e5; ];      % starting model
modelInput.mogi.step =  [   100;    100;    100;   1e4; ];      % initial maximum step size
modelInput.mogi.lower = [  -500;   -500;      0;   1e-3;];      % lower bounds on m
modelInput.mogi.upper = [   500;    500;   1000;   1e7; ];      % upper bounds on m


% McTigue 'T'
%                                X       Y      Z     R   DP/mu
modelInput.mctigue.start = [     0;      0; -1200;   50;  2e-2; ];  % starting model
modelInput.mctigue.step =  [    50;     50;    50;   10;  2e-2; ];  % initial maximum step size
modelInput.mctigue.lower = [  -200;   -200; -1250;   10;  1e-4; ];  % lower bounds on m
modelInput.mctigue.upper = [   200;    200; -1000;  100;  5e-1; ];  % upper bounds on m
