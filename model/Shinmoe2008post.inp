% =========================================================================
% Geodetic Bayesian Inversion Software (GBIS)
% Software for the Bayesian inversion of geodetic data.
% Copyright: Marco Bagnardi, 2018
%
% Email: gbis.software@gmail.com
%
% Reference: 
% Bagnardi M. & Hooper A, (2018). 
% Inversion of surface deformation data for rapid estimates of source 
% parameters and uncertainties: A Bayesian approach. Geochemistry, 
% Geophysics, Geosystems, 19. https://doi.org/10.1029/2018GC007585
%
% =========================================================================
% Last update: 8 August, 2018

% INPUT FILE

%% Reference point and Area of interest
geo.referencePoint = [130.88; 31.91];    % Longitude and Latitude in degrees for arbitrary reference point of local coordinates system [Lon; Lat;]
geo.boundingBox = [130.85; 31.94; 130.91; 31.88];  % Coordinates in degrees of upper left and lower right limits of area of interest [UL_Lon,UL_Lat,LR_Lon,LR_Lat] [W; N; E; S]

%% InSAR data
% Make sure insarID is unique!

insarID = 1;                            % InSAR dataset unique identifier - ALOS1 asc track

insar{insarID}.dataPath = '/Users/yunjunz/data/Kirishima/Model/data/KirishimaAlosAT424_20080929_20100705.mat'; % Path to data file

insar{insarID}.wavelength = 0.236;      % Wavelength in m (e.g., Envisat/ERS/Sentinel: 0.056; CSK/TSX/TDX: 0.031)

insar{insarID}.constOffset = 'y';       % Remove constant offset? 'y' or 'n'

insar{insarID}.rampFlag = 'n';          % Remove ramp? 'y' or 'n'

insar{insarID}.sillExp = 3.7e-05;      % Variogram sill in m^2

insar{insarID}.range = 1300;            % Variogram range in m

insar{insarID}.nugget = 1.1e-06;          % Variogram nugget in m

insar{insarID}.quadtreeThresh = 0.002^2;  % Quadtree threshold variance (e.g., 0.01^2 m or 1e-04 m)

insar{insarID}.quadtreeEndLevel = 15;  % 7, Quadtree end of subdivisions, default is 1000

insar{insarID}.quadtreeMinPixelNumber = 3 % Minimum number of pixels for each subdivision, below which will excluded. Set to 1 to keep everything.

insar{insarID}.quadtreeBox = [130.865; 31.925; 130.90; 31.90];  % WNES coordinates in degrees for area of interest

insar{insarID}.gridStep = 750;          % grid step in m

%%

insarID = 2;                            % InSAR dataset unique identifier - ALOS1 desc track

insar{insarID}.dataPath = '/Users/yunjunz/data/Kirishima/Model/data/KirishimaAlosDT73_20081012_20100302.mat'; % Path to data file

insar{insarID}.wavelength = 0.236;      % Wavelength in m (e.g., Envisat/ERS/Sentinel: 0.056; CSK/TSX/TDX: 0.031)

insar{insarID}.constOffset = 'y';       % Remove constant offset? 'y' or 'n'

insar{insarID}.rampFlag = 'n';          % Remove ramp? 'y' or 'n'

insar{insarID}.sillExp = 2.8e-05;       % Variogram sill in m^2

insar{insarID}.range = 2100;             % Variogram range in m

insar{insarID}.nugget = 6.7e-06;          % Variogram nugget in m

insar{insarID}.quadtreeThresh = 0.0025^2;  %0.00375^2 Quadtree threshold variance (e.g., 0.01^2 m or 1e-04 m)

insar{insarID}.quadtreeEndLevel = 15;  % Quadtree end of subdivisions, default is 1000

insar{insarID}.quadtreeMinPixelNumber = 3 % Minimum number of pixels for each subdivision, below which will excluded. Set to 1 to keep everything.

insar{insarID}.quadtreeBox = [130.865; 31.925; 130.90; 31.90];  % WNES coordinates in degrees for area of interest

insar{insarID}.gridStep = 750;          % grid step in m



%% Model parameters
modelInput.nu = 0.25;       				% Poisson's ratio (Shear modulus is set to 1)

% Topographic Effect correction using varying depth method (Williams & Wadge, 1998, GRL)
% Peak of Shinmoe-dake: 1421 m
modelInput.topo = 'y';						% 'y' or 'n'. Apply topographic correction using varying depth method.
modelInput.freeSurfaceHeight = 1100;		% Minimum height of observations in m a.s.l.; observations below the threshold will be fixed to this height.


% Compound Dislocation Model (Nikhoo) 'C'
%                            X      Y      Z    omegaX  omegaY  omegaZ   ax      ay      az     opening
modelInput.cdmn.start = [   400;   300;  -800;     0;      0;      0;   100;    100;    100;     -0.2;];  % starting model
modelInput.cdmn.step  = [    10;    10;   100;     1;      1;      1;    10;     10;     10;      0.1;];  % initial maximium step size
modelInput.cdmn.lower = [   200;   100; -1000;   -55;    -10;      0;    50;     50;     50;     -1e1;];  % lower bounds on m
modelInput.cdmn.upper = [   500;   500;  -500;     0;     20;     50;   300;    300;    400;    -1e-2;];  % upper bounds on m




% Mogi 'M'
%                             X       Y      Z      DV
modelInput.mogi.start = [  400;   300;   -800;    -5e4; ];      % starting model
modelInput.mogi.step =  [   50;    50;    100;     1e4; ];      % initial maximum step size
modelInput.mogi.lower = [    0;  -200;  -1100;    -1e8; ];      % lower bounds on m
modelInput.mogi.upper = [  800;   600;   -500;    -1e2; ];      % upper bounds on m

% McTigue 'T'
%                                X       Y      Z     R   DP/mu
modelInput.mctigue.start = [   400;    300;  -800;  200; -5e-4; ];  % starting model
modelInput.mctigue.step  = [    50;     50;   100;   10;  1e-3; ];  % initial maximum step size
modelInput.mctigue.lower = [   200;      0; -1100;   50;  -1e0; ];  % lower bounds on m
modelInput.mctigue.upper = [   800;    800;  -500;  300; -1e-8; ];  % upper bounds on m

% Yang 'Y'
%                             X       Y      Z      a     b/a    Str    Pln    DP/mu
modelInput.yang.start = [   400;    400;  -800;   300;    0.5;    1;  -89.9;  -1e-4;];    % starting model
modelInput.yang.step =  [    50;     50;   100;    50;   0.01;    1;      1;   1e-3;];    % initial maximum step size
modelInput.yang.lower = [   200;    300; -1100;    50;   0.01; -100; -150.0;  -1e-0;];    % lower bounds on m
modelInput.yang.upper = [   800;    800;  -500;  1000;   0.99;   60;  -30.0;  -1e-8;];    % upper bounds on m
